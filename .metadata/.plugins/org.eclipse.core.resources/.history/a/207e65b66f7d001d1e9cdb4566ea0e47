package com.fooddelivery;

import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;

public class FoodDeliveryGUI extends JFrame {
// Reference to the food delivery system
private FoodDelivery foodDelivery;

// GUI elements
private JTextField itemField;
private JTextField addressField;
private JButton addButton;
private JButton cancelButton;
private JLabel ordersLabel;

public FoodDeliveryGUI(FoodDelivery foodDelivery) {
this.foodDelivery = foodDelivery;

// Set up the frame
setTitle("Food Delivery System");
setSize(600, 400);
setLocationRelativeTo(null);
setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

//Create the GUI elements
itemField = new JTextField(20);
addressField = new JTextField(20);
addButton = new JButton("Add Order");
cancelButton = new JButton("Cancel Order");
ordersLabel = new JLabel("No orders placed");

//Set up the layout
JPanel inputPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
inputPanel.add(new JLabel("Item: "));
inputPanel.add(itemField);
inputPanel.add(new JLabel("Address: "));
inputPanel.add(addressField);
inputPanel.add(addButton);
inputPanel.add(cancelButton);

add(inputPanel, BorderLayout.NORTH);
add(ordersLabel, BorderLayout.SOUTH);

//Add action listeners to the buttons
addButton.addActionListener(new ActionListener() {
@Override
public void actionPerformed(ActionEvent e) {
String item = itemField.getText();
String address = addressField.getText();

foodDelivery.addOrder(item, address);
updateOrdersLabel();
}
});

cancelButton.addActionListener(new ActionListener() {
@Override
public void actionPerformed(ActionEvent e) {
List<Order> orders = foodDelivery.getOrders();
if (!orders.isEmpty()) {
Order lastOrder = orders.get(orders.size() - 1);
foodDelivery.cancelOrder(lastOrder);
updateOrdersLabel();
}
}
});
}

// Update the orders label to show the current list of orders
private void updateOrdersLabel() {
List<Order> orders = foodDelivery.getOrders();
if (orders.isEmpty()) {
ordersLabel.setText("No orders placed");
